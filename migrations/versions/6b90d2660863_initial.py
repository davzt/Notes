"""initial

Revision ID: 6b90d2660863
Revises: 
Create Date: 2023-04-07 19:40:44.220283

"""
import fastapi_users_db_sqlalchemy
from alembic import op
import sqlalchemy as sa
from sqlalchemy.schema import Sequence, CreateSequence


# revision identifiers, used by Alembic.
revision = '6b90d2660863'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__user'))
    )
    op.create_index(op.f('ix__user__email'), 'user', ['email'], unique=True)
    op.execute(CreateSequence(Sequence('notes_id_seq')))
    op.create_table('note',
    sa.Column('user_id', fastapi_users_db_sqlalchemy.generics.GUID(), nullable=False),
    sa.Column('note_id', sa.Integer(), server_default=sa.text("nextval('notes_id_seq')"), nullable=False),
    sa.Column('title', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_time_limited', sa.Boolean(), nullable=False),
    sa.Column('time_limit', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk__note__user_id__user'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'note_id', name=op.f('pk__note'))
    )
    op.create_index(op.f('ix__note__note_id'), 'note', ['note_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix__note__note_id'), table_name='note')
    op.drop_table('note')
    op.drop_index(op.f('ix__user__email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
